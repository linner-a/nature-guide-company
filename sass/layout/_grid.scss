.row {
    max-width: $grid-width;
    margin: 0 auto; /* Standard trick to use to center a block element within another block element */
    
    @include respond(tab-port) {
       max-width: 80rem;
        padding: 0 3rem;
    }
   
    /* We want to have a margin bottom on all except the last one closest to the footer. The :not(:last-child) selects all children of .row except the last one and adds the margin to them only. */
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small; 
        }
    }

    @include clearfix;

    /* With [] you select an attribute. With ^= you select everything that starts with what you put in "" */
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
                margin-right: 0; //as they are no longer side by side, we do not want the gutter (space in between on the sides)
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important; // this makes them all sit in a collumn after each other instead of side by side.
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) * 0.5);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) * 1/3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) * 1/3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) * 1/4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) * 1/4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) * 1/4) + 2 * #{$gutter-horizontal});
    }
}