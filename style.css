@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-10rem); /* Makes sure that it starts 100px to the left */
	}
	80% {
		transform: translateX(1rem);
	}
	100% {
		opacity: 1;
		transform: translateX(0); /* 0 means that it is just like it is in its original form */
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(10rem); /* Makes sure that it starts 100px to the left */
	}
	80% {
		transform: translateX(-1rem);
	}
	100% {
		opacity: 1;
		transform: translateX(0); /* 0 means that it is just like it is in its original form */
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(3rem); /* Makes sure that it starts 30px down */
	}
	100% {
		opacity: 1;
		transform: translateY(0); /* 0 means that it is just like it is in its original form */
	}
}

*,
*::before,
*::after {
	/*  * Universal selector - make sure the standard is the same in all browsers */
	margin: 0px;
	padding: 0px;
	box-sizing: inherit; /* Forces the box-sizing element to be inheritble in the whole document. Better practice to do this and then put the border-box declaration in the body selector, because it will then be easier to change later for plugins of other things */
}

html {
	font-size: 62.5%; /* We want 1rem to be 10px; 10/16 = 62.5%. We want this to be 10px so that rem is easy to calc when using in the code. But that will remove peoples ability to change font size in their browser, and therefor it is bad practice. Broweser standard font size = 16. 10/16 = 0.625. Therefor we put 62.5% to get 10px in standard browser. */
}

@media (max-width: 75em) {
	html {
		font-size: 56.25%;
	}
}

@media (max-width: 56.25em) {
	html {
		font-size: 50%;
	}
}

@media (min-width: 112.5em) {
	html {
		font-size: 75%;
	}
}

body {
	box-sizing: border-box;
	padding: 3rem; /* Makes sure that padding and boarder is a part of an objecs specified height and width, instead of being added to it. Since the box-sizing element has been declared to be inhertible in the universal selctor, by putting it in the body selector, it is now inhetired by everything else */
}

@media (max-width: 56.25em) {
	body {
    padding: 0; /* Removes white boarder around the entire website */
	}
}

::selection {
	background-color: #B8D8AC;
	color: #fff;
}

body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	font-size: 1.6rem;
	line-height: 1.7;
	color: #777;
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;
	backface-visibility: hidden; /* Makes sure any small glitch or shake at the end of animations are hidden, Also if you rotate something it makes sure what is behinf is hidden */
}

.heading-primary--main {
	display: block;
	font-size: 6rem;
	font-weight: 400;
	letter-spacing: 3.5rem;
	animation: moveInLeft 1s ease-out;
}

@media (max-width: 37.5em) {
	.heading-primary--main {
		font-size: 5rem;
		letter-spacing: 1rem;
	}
}

.heading-primary--sub {
	display: block;
	font-size: 2rem;
	font-weight: 700;
	letter-spacing: 1.53rem;
	margin-bottom: 6rem;
	animation: moveInRight 1s ease-out;
}

@media (max-width: 37.5em) {
	.heading-primary--sub {
		letter-spacing: .5rem;
	}
}

.heading-secondary {
	font-size: 3.5rem;
	font-weight: 700;
	text-transform: uppercase;
	display: inline-block;
	background-image: linear-gradient(to right, #B8D8AC, #6F9068);
	-webkit-background-clip: text; /* This will clip the background around the text, so the background is only where the text is*/
	background-clip: text;
	color: transparent; /* When we put the color to transparent, we can now see the background behind that has been cut around the text */
}

@media (max-width: 56.25em) {
	.heading-secondary {
		font-size: 3rem;
	}
}

@media (max-width: 37.5em) {
	.heading-secondary {
		font-size: 2.5rem;
	}
}

.heading-tertiary {
	font-size: 1.6rem;
	font-weight: 700;
	text-transform: uppercase;
}

.paragraph {
	font-size: 1.6rem;
}

.paragraph:not(:last-child) {
	margin-bottom: 3rem;
}

.u-center-text {
	text-align: center !important;
}

.u-margin-bottom-big {
	margin-bottom: 8rem !important;
}

.u-margin-bottom-medium {
	margin-bottom: 4rem !important;
}

.u-margin-bottom-small {
	margin-bottom: 2rem !important;
}

.u-margin-top-big {
	margin-top: 8rem !important;
}

.btn,
.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 1.5rem 4rem; /* Fist one is top and bottom, second one is left and right */
	border-radius: 10rem;
	transition: all 0.2s; /* Decides that all properties can be animated (transform om :hover etc), and that it should last 0.2 sec */
	font-size: 1.6rem;
	box-shadow: 0 0.5rem 2rem rgba(33, 33, 33, 0.7);
	border: none;
	cursor: pointer;
}

.btn:hover {
	transform: translateY(-0.5rem);
	box-shadow: 0 1rem 2rem rgba(33, 33, 33, 0.8); /* x-direction, y-direction, blurr, color */
}

.btn:active,
.btn:focus {
	transform: translateY(-0.2rem);
	box-shadow: 0 0.5rem 2rem rgba(33, 33, 33, 0.7);
	outline: none; /* Removes the blue boarded that appears when clicking on a <button> */
}

.btn--pink {
	background-color: #E2A2A8;
	color: #fff;
	display: inline-block;
}

.btn--green {
	background-color: #6F9068;
	color: #fff;
	display: inline-block;
}

.btn--animated {
	animation: moveInBottom 0.5s ease-out 0.75s; /* 0.5s is the duration, 0.75s is how long it will wait until the animation starts */
	animation-fill-mode: backwards; /* Makes sure the button is invisible before the animation start (sets the starting values of the animation to 0) */
}

.btn-text:link,
.btn-text:visited {
	font-size: 1.6rem;
	display: inline-block;
	text-decoration: none;
	color: #6F9068;
	border-bottom: 1px solid #6F9068;
	padding: 3px;
	transition: all .2s;
}

.btn-text:hover {
	background-color: #6F9068;
	color: white;
	box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3);
	transform: translateY(-2px);
}

.btn-text:active {
	box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
	transform: translateY(0);
}

.composition {
	position: relative;
}

.composition__photo {
	width: 55%;
	box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
	border-radius: 2px;
	position: absolute;
	z-index: 10;
	transition: all 0.2s;
	outline-offset: 2rem;
}

@media (max-width: 56.25em) {
	.composition__photo {
		position: relative;
		float: left;
		width: 33.333333333%;
		box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3);
	}
}

.composition__photo--p1 {
	left: 0;
	top: -2rem;
}

@media (max-width: 56.25em) {
	.composition__photo--p1 {
		top: 0;
		transform: scale(1.2);
	}
}

.composition__photo--p2 {
	right: 0;
	top: 2rem;
}

@media (max-width: 56.25em) {
	.composition__photo--p2 {
		top: -1;
		z-index: 100;
		transform: scale(1.3);
	}
}

.composition__photo--p3 {
	left: 20%;
	top: 10rem;
}

@media (max-width: 56.25em) {
	.composition__photo--p3 {
		top: 0;
		left: 0;
		transform: scale(1.2);
	}
}

.composition__photo:hover {
	outline: 1.5rem solid #E2A2A8;
	transform: scale(1.08) translateY(-0.5rem);
	box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
	z-index: 20;
}

.composition:hover .composition__photo:not(:hover) {
	transform: scale(0.92);
}

.feature-box {
	font-size: 1.5rem;
	background-color: rgba(255, 255, 255, 0.7);
	padding: 2.5rem;
	text-align: center;
	border-radius: 3px;
	box-shadow: 0 2rem 3rem rgba(0, 0, 0, 0.35);
	transition: transform 0.3s;
}

@media (max-width: 56.25em) {
	.feature-box {
		padding: 2rem 5rem;
		margin: 0 3rem;
	}
}

.feature-box:hover {
	transform: translateY(-1.5rem) scale(1.03);
}

.feature-box__icon {
	font-size: 6rem;
	background-image: linear-gradient(to right, #B8D8AC, #6F9068);
	-webkit-background-clip: text; /* This will clip the background around the text, so the background is only where the text is*/
	color: transparent;
}

@media (max-width: 56.25em) {
	.feature-box__icon {
		margin: 1em;
	}
}

.card {
	perspective: 150rem; /* Makes the animation of the cards rotation look natural, like it is actually rotating and "coming out" from the screen. Has to be on the parent*/
	-moz-perspective: 150rem;
	position: relative;
	height: 52rem; /* As all child elements are taken out of the flow with the absolute positioning, the parent element loses its height. We must give it this height or the perspective thing will not work */
}

.card__side {
	height: 52rem;
	transition: all 1s ease;
	position: absolute; /* With absolute position we can use the top and left properties and set them to 0, to make the two boxes be on top of each other */
	top: 0;
	left: 0;
	backface-visibility: hidden; /* Makes sure that the card that is at "the back" is not visible */
	width: 100%; /*Putting the width to 100% makes it have the width of 100% of its parent, instead of onlu having the width of the text content */
	border-radius: 3px;
	overflow: hidden; /* Overflow hidden, because otherwise the background image in the child element __picture will overflow and hide the rounded corners that the corner-radius is giving. */
	box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
}

.card__side--front {
	background-color: #fff;
}

.card__side--back {
	transform: rotateY(180deg); /* The backside starts as rotated, and then on hover it goes back to the front and is visible, that is why it is set to 180deg here and 0 on hover. */
}

.card__side--back-1 {
	background-image: linear-gradient(to right bottom, #A0C1B8, #709FB0);
}

.card__side--back-2 {
	background-image: linear-gradient(to right bottom, #B8D8AC, #6F9068);
}

.card__side--back-3 {
	background-image: linear-gradient(to right bottom, #DBE5E7, #9EA3A4);
}

.card:hover .card__side--front {
	transform: rotateY(-180deg);
}

.card:hover .card__side--back {
	transform: rotateY(0);
}

.card__picture {
	background-size: cover;
	height: 23rem;
	-webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); /* Makes sure it works in all browsers */
	clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
}

.card__picture--1 {
	background-image: linear-gradient(to right bottom, rgba(160, 193, 184, 0.7), rgba(112, 159, 176, 0.9)), url(../img/nat-5.jpg);
}

.card__picture--2 {
	background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.7), rgba(111, 144, 104, 0.9)), url(../img/nat-6.jpg);
}

.card__picture--3 {
	background-image: linear-gradient(to right bottom, rgba(219, 229, 231, 0.8), rgba(158, 163, 164, 0.8)), url(../img/nat-7.jpg);
}

.card__heading {
	font-size: 2.8rem;
	font-weight: 300;
	color: #fff;
	text-transform: uppercase;
	text-align: right;
	position: absolute;
	top: 12rem;
	right: 2rem;
	width: 75%;
}

.card__heading-span {
	padding: 1rem 1.5rem;
	-webkit-box-decoration-break: clone; /* We have put the width of the heading to 75%, and added the padding 1rem and 1.5rem. This is so that the heading will break to 2 lines and look like 2 boxes under each other. The box-decoration-break set to clone will now make sure the 2 lines are treated as 2 different elements. If we don't do this, the padding will not be added as we want to the two different lines, as the text will coniue to the end of the first one, and start right att the beginning of the first one */
	box-decoration-break: clone;
}

.card__heading-span--1 {
	background-image: linear-gradient(to right bottom, rgba(160, 193, 184, 0.9), rgba(112, 159, 176, 0.9));
}

.card__heading-span--2 {
	background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.9), rgba(111, 144, 104, 0.9));
}

.card__heading-span--3 {
	background-image: linear-gradient(to right bottom, rgba(219, 229, 231, 0.85), rgba(158, 163, 164, 0.85));
}

.card__details {
	padding: 3rem;
}

.card__details ul {
	list-style: none;
	width: 80%;
	margin: 0 auto; /* Easiest way to center a block element within a block-element */
}

.card__details ul li {
	text-align: center;
	font-size: 1.5rem;
	padding: 1rem;
}

.card__details ul li:not(:last-child) {
	border-bottom: 1px solid #eee;
}

.card__CTA {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 90%;
	text-align: center;
}

.card__price-box {
	text-align: center;
	color: #fff;
	margin-bottom: 5rem;
}

.card__price-only {
	font-size: 2.5rem;
}

.card__price-value {
	font-size: 12rem;
	font-weight: 100;
}

@media (max-width: 56.25em),
(hover: none) {
	.card {
		height: auto;
		border-radius: 3px;
		background-color: #fff;
		box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
	}
	.card__side {
		height: auto;
		position: relative; /* Making them sit after each other instead of on top when we remove the absolute positioning */
		box-shadow: none;
	}
	.card__side--back {
		transform: rotateY(0); /* Rotate back to normal */
		clip-path: polygon(0 9%, 100% 0, 100% 100%, 0 100%);
	}
	.card:hover .card__side--front {
		transform: rotateY(0);
	}
	.card__details {
		padding: 1rem 3rem;
	}
	.card__CTA {
		position: relative;
		top: 0;
		left: 0;
		transform: translate(0);
		width: 100%;
		padding: 7rem 4rem 4rem 4rem;
	}
	.card__price-box {
		margin-bottom: 2rem;
	}
	.card__price-value {
		font-size: 8rem;
	}
}

.story {
	width: 75%;
	margin: 0 auto;
	box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
	background-color: rgba(255, 255, 255, 0.6);
	border-radius: 3px;
	padding: 6rem;
	padding-left: 9rem; /* To fix that the circle shape is overflowing the padding on the left side. Adding more so that it looks even. */
	font-size: 1.6rem;
	transform: skewX(-12deg);
}

@media (max-width: 56.25em) {
	.story {
		width: 100%;
		padding: 4rem;
		padding-left: 7rem;
	}
}

@media (max-width: 37.5em) {
	.story {
		transform: skewX(0);
	}
}

.story__shape {
	width: 15rem;
	height: 15rem;
	float: left;
	-webkit-shape-outside: circle(50% at 50% 50%);
	shape-outside: circle(50% at 50% 50%); /* Defines how the text content flows around the element. The first value is the width of the radius. 50% means half of the width of the element, which means that the diameter will be 100% the width that we specified. At 50% 50% means exactly the center horizontaly and vertically. Element must be floated and have defined height and width  */
	-webkit-clip-path: circle(50% at 50% 50%);
	clip-path: circle(50% at 50% 50%);
	transform: translateX(-3rem) skewX(12deg); /* translateX: Best way to position a floated element */
	position: relative;
}

@media (max-width: 37.5em) {
	.story__shape {
		transform: translateX(-3rem) skewX(0);
	}
}

.story__img {
	height: 100%; /* Makes sure the width is always 100% of it's container, in this case the story__shape. Responsive and alsways fits if on different screen sizes. Depending on the image shape you might need to define the width instead */
	transform: translateX(-15%) scale(1.4);
	transition: all 0.5s;
}

.story__text {
	transform: skewX(12deg);
}

@media (max-width: 37.5em) {
	.story__text {
		transform: skewX(0);
	}
}

.story__caption {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, 20%);
	color: #fff;
	text-transform: uppercase;
	font-size: 1.7rem;
	text-align: center;
	opacity: 0;
	transition: all 0.5s ease-in;
}

.story:hover .story__caption {
	transform: translate(-50%, -50%);
	opacity: 1;
}

.story:hover .story__img {
	opacity: .8;
}

.bg-video {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: -1; /* Makes sure that it is behind everything else (heading and button was still behind the video before this) */
	opacity: .2;
	overflow: hidden;
	/* object-fit: cover on the __content makes sure it fits properly and keeps right size ratio, but it will overflow on the sides and interrupt the white "frame" around everything on the page. This solves that.  */
}

.bg-video__content {
	height: 100%;
	width: 100%;
	object-fit: cover;
	/* it is not enought with the width and height of 100% to make it fit properly and cover the whole section, the object-fit: cover  will make sure it covers the whole section but still has the same size ratio. The parts of it that is flowing outside of the parent element will simply be cut off. Exept on the sides see comment on .bg-video  */
}

.form {
	transition: all .2s;
}

.form button {
	margin-left: 20%;
}

.form__group:not(:last-child) {
	margin-bottom: 1rem;
}

.form__input {
	font-size: 1.5rem;
	font-family: "Lato", sans-serif;
	padding: 1.5rem 2rem;
	background-color: rgba(255, 255, 255, 0.5);
	border-radius: 2px;
	border: none;
	border-bottom: 3px solid transparent; /* So that it does not move 3px when it is in focus */
	width: 80%;
	display: block;
}

.form__input:focus {
  /* When you have put the marker in the field/are writing */
	outline: none;
	box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
	border-bottom: 3px solid #E2A2A8;
}

.form__label {
	font-size: 1.5rem;
	font-weight: 500;
	margin-left: 2rem;
	margin-top: .7rem;
	display: block;
	transition: all .2s;
}

.form__input:placeholder-shown+.form__label {
	/* The pluss is a sibling selector. This one selects the next sibling in the html code. So __input and __label are siblingt, and the one you want to select must be after the other one in the html. */
	opacity: 0;
	visibility: hidden; /* Makes sure it completely dissapears from the page. But this one cannot be animated, therefore we need to opacity as well. */
	transform: translateY(-4rem);
}

.form__radio-group {
	display: inline-block;
	width: 49%;
}

@media (max-width: 56.25em) {
	.form__radio-group {
		width: 100%;
		margin-bottom: 3rem;
	}
}

.form__radio-label {
	font-size: 1.6rem;
	cursor: pointer;
	position: relative;
	padding-left: 4rem;
}

.form__radio-button {
	height: 3rem;
	width: 3rem;
	border: 5px solid #6F9068;
	border-radius: 50%;
	display: inline-block;
	position: absolute;
	top: -.4;
	left: 0;
}

.form__radio-button::after {
	content: "";
	display: block;
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 50%;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	background-color: #6F9068;
	opacity: 0;
}

.form__radio-input:checked+.form__radio-label .form__radio-button::after {
	opacity: 1;
}

.form__radio-input {
	display: none;
}

.popup {
	height: 100vh;
	width: 100%;
	background-color: rgba(33, 33, 33, 0.9);
	position: fixed;
	top: 0;
	left: 0;
	z-index: 3000;
	opacity: 0;
	visibility: hidden;
	transition: all 0.3s;
}

.popup__content {
	width: 75%;
	background-color: #fff;
	box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.4);
	border-radius: 3px;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%) scale(0.5);
	display: table;
	opacity: 0;
	transition: all .4s .2s;
	/* .2s delay */
}

@media (max-width: 56.25em) {
	.popup__content {
		display: block;
	}
}

@media (max-width: 37.5em) {
	.popup__content {
		display: block;
		width: 100%;
	}
}

.popup__left {
	width: 33.3333333%;
	display: table-cell;
}

@media (max-width: 56.25em) {
	.popup__left {
		width: 100%;
		display: block;
	}
}

.popup__right {
	width: 66.666666666%;
	display: table-cell;
	vertical-align: middle;
	padding: 3rem 5rem;
	position: relative;
}

@media (max-width: 56.25em) {
	.popup__right {
		width: 100%;
		display: block;
	}
}

.popup__img {
	display: block;
	width: 100%;
}

@media (max-width: 56.25em) {
	.popup__img {
		width: 50%;
		height: 30vh;
		float: left;
		margin-bottom: 3rem;
	}
}

@media (max-width: 37.5em) {
	.popup__img {
		width: 50%;
		height: 25vh;
		float: left;
		margin-bottom: 3rem;
	}
}

.popup__text {
	font-size: 1.4rem;
	margin-bottom: 4rem;
	-moz-column-count: 2;
	-moz-column-gap: 4rem;
	-moz-column-rule: 1px solid #777;
	column-count: 2;
	column-gap: 4rem;
	column-rule: 1px solid #777;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
}

@media (max-width: 37.5em) {
	.popup__text {
		-moz-column-count: 1;
		column-count: 1;
	}
}

.popup:target {
	opacity: 1;
	visibility: visible;
}

.popup:target .popup__content {
	transform: translate(-50%, -50%) scale(1);
	opacity: 1;
}

.popup__close:link,
.popup__close:visited {
	position: absolute;
	top: 2.5rem;
	right: 2.5rem;
	font-size: 3rem;
	text-decoration: none;
	display: inline-block;
	color: #777;
	line-height: 1;
	transition: all .2s;
}

@media (max-width: 56.25em) {
	.popup__close:link,
	.popup__close:visited {
		color: #fff;
		top: 1rem;
		right: 1.5rem;
		font-size: 4rem;
	}
}

.popup__close:hover {
	color: #B8D8AC;
}

@media (max-width: 56.25em) {
	.popup__link:link,
	.popup__link:visited {
		width: 20rem;
		display: block;
		margin: 0 auto;
		text-align: center;
	}
}

.header {
	height: 95vh;
	background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.6), rgba(111, 144, 104, 0.9)), url(../img/hero-small.jpg);
	background-size: cover; /* Makes sure that the element fits the box/viewports of different sizes */
	background-position: top; /* Makes sure the background is always at the top, with no white space, no matter the viewport size */
	position: relative;
	-webkit-clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%); /* Makes sure it works in all browsers */
	clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
}

@media (min-resolution: 192dpi) and (min-width: 37.5em),
(min-width: 125em) {
	.header {
		background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.6), rgba(111, 144, 104, 0.9)), url(../img/hero.jpg);
	}
}

@media (max-width: 37.5em) {
	.header {
		-webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
		clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
	}
}

.header__logo-box {
	position: absolute;
	top: 4rem;
	left: 4rem;
}

.header__logo {
	height: 3.5rem;
}

.header__text-box {
	position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%); /* Makes sure that the left and top properties start counting from the middle of the element in x and y direction */
	text-align: center;
}

.row {
	max-width: 114rem;
	margin: 0 auto; /* Standard trick to use to center a block element within another block element */
}

@media (max-width: 56.25em) {
	.row {
		max-width: 80rem;
		padding: 0 3rem;
	}
}

.row:not(:last-child) {
	margin-bottom: 8rem; /* We want to have a margin bottom on all except the last one closest to the footer. The :not(:last-child) selects all children of .row except the last one and adds the margin to them only. */
}

@media (max-width: 56.25em) {
	.row:not(:last-child) {
		margin-bottom: 6rem;
	}
}

.row::after {
	content: "";
	display: table;
	clear: both;
}

/* With [] you select an attribute. With ^= you select everything that starts with what you put in "" */
.row [class^="col-"] {
	float: left;
}

.row [class^="col-"]:not(:last-child) {
	margin-right: 6rem;
}

@media (max-width: 56.25em) {
	.row [class^="col-"]:not(:last-child) {
		margin-right: 0;
		margin-bottom: 6rem;
	}
}

@media (max-width: 56.25em) {
	.row [class^="col-"] {
		width: 100% !important;
	}
}

.row .col-1-of-2 {
	width: calc((100% - 6rem) * 0.5);
}

.row .col-1-of-3 {
	width: calc((100% - 2 * 6rem) * 1/3);
}

.row .col-2-of-3 {
	width: calc(2 * ((100% - 2 * 6rem) * 1/3) + 6rem);
}

.row .col-1-of-4 {
	width: calc((100% - 3 * 6rem) * 1/4);
}

.row .col-2-of-4 {
	width: calc(2 * ((100% - 3 * 6rem) * 1/4) + 6rem);
}

.row .col-3-of-4 {
	width: calc(3 * ((100% - 3 * 6rem) * 1/4) + 2 * 6rem);
}

.footer {
	background-color: #333;
	padding: 8rem 0;
	color: #f7f7f7;
}

@media (max-width: 56.25em) {
	.footer {
		padding: 3rem 0;
	}
}

.footer__logo-box {
	text-align: center;
}

.footer__logo {
	width: 15rem;
	height: auto;
	margin-bottom: 5rem;
}

.footer__navigation {
	border-top: 1px solid #777;
	padding-top: 2rem;
	display: inline-block; /* Makes sure the top border does not go on further than the links*/
}

@media (max-width: 56.25em) {
	.footer__navigation {
		width: 100%;
		text-align: center;
	}
}

.footer__list {
	list-style: none;
}

.footer__item {
	display: inline-block;
}

.footer__item:not(:last-child) {
	margin-right: 2rem;
}

@media (max-width: 56.25em) {
	.footer__item:not(:last-child) {
		margin-right: 1rem;
	}
}

.footer__link:link,
.footer__link:visited {
	text-decoration: none;
	color: #f7f7f7;
	text-transform: uppercase;
	transition: all .2s;
	display: inline-block;
}

.footer__link:active,
.footer__link:hover {
	box-shadow: 0 1rem 2.5rem rgba(0, 0, 0, 0.5);
	color: #6F9068;
	transform: rotate(3deg) scale(1.2);
}

.footer__copyright {
	border-top: 1px solid #777;
	padding-top: 2rem;
	width: 97%;
	float: right;
}

@media (max-width: 56.25em) {
	.footer__copyright {
		width: 100%;
		float: none;
	}
}

.navigation__checkbox {
	display: none;
}

.navigation__button {
	background-color: #fff;
	position: fixed;
	width: 7rem;
	height: 7rem;
	border-radius: 50%;
	top: 6rem;
	right: 6rem;
	z-index: 2000;
	box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
	text-align: center;
	cursor: pointer;
}

@media (max-width: 56.25em) {
	.navigation__button {
		top: 4rem;
		right: 4rem;
	}
}

@media (max-width: 37.5em) {
	.navigation__button {
		top: 3rem;
		right: 3rem;
	}
}

.navigation__background {
	height: 6rem;
	width: 6rem;
	border-radius: 50%;
	position: fixed;
	top: 6.5rem;
	right: 6.5rem;
	background-image: radial-gradient(#B8D8AC, #6F9068);
	z-index: 1000;
	transition: all 0.6s cubic-bezier(0.86, 0, 0.07, 1);
}

@media (max-width: 56.25em) {
	.navigation__background {
		top: 4.5rem;
		right: 4.5rem;
	}
}

@media (max-width: 37.5em) {
	.navigation__background {
		top: 3.5rem;
		right: 3.5rem;
	}
}

.navigation__nav {
	height: 100vh;
	position: fixed;
	top: 0;
	right: 0;
	z-index: 1500;
	opacity: 0;
	width: 0;
	transition: all 0.6s cubic-bezier(0.86, 0, 0.07, 1);
}

.navigation__list {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	list-style: none;
	text-align: center;
	width: 100%;
}

.navigation__item {
	margin: 1rem;
}

.navigation__link:link,
.navigation__link:visited {
	display: inline-block;
	color: #fff;
	font-size: 3rem;
	font-weight: 300;
	text-decoration: none;
	text-transform: uppercase;
	background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
	background-size: 225%;
	transition: all .4s;
	padding: 1rem 2rem;
}

.navigation__link:hover,
.navigation__link:active {
	background-position: 100%;
	color: #B8D8AC;
	transform: translateX(1rem);
}

.navigation__checkbox:checked~.navigation__background {
/* the ~ makes it possible to select a general sibling. Compared to + which selects the adjecent sibling */
	transform: scale(80);
}

.navigation__checkbox:checked~.navigation__nav {
	opacity: 1;
	width: 100%;
}

.navigation__icon {
	position: relative;
	margin-top: 3.5rem;
}

.navigation__icon,
.navigation__icon::before,
.navigation__icon::after {
	width: 3rem;
	height: 2px; /* Using 2px because want it to always be that, unaffected by other things */
	background-color: #333;
	display: inline-block;
}

.navigation__icon::before,
.navigation__icon::after {
	content: "";
	position: absolute;
	left: 0;
	transition: all .2s;
}

.navigation__icon::before {
	top: -.8rem;
}

.navigation__icon::after {
	top: .8rem;
}

.navigation__button:hover .navigation__icon::before {
	top: -1rem;
}

.navigation__button:hover .navigation__icon::after {
	top: 1rem;
}

.navigation__checkbox:checked+.navigation__button .navigation__icon {
	background-color: transparent;
}

.navigation__checkbox:checked+.navigation__button .navigation__icon:before {
	top: 0;
	transform: rotate(135deg);
}

.navigation__checkbox:checked+.navigation__button .navigation__icon:after {
	top: 0;
	transform: rotate(-135deg);
}

.section-about {
	background-color: #f7f7f7;
	padding: 25rem 0;
	margin-top: -20vh; /* This is to move it up so that there is no white space gap in the triangle where the heading is cut in the bottom. The heading is 95vh in total, and the right side creating the triangle is only 75vh, therefore this part must be moved up 20vh to fill the white space. */
}

@media (max-width: 56.25em) {
	.section-about {
		padding: 20rem 0;
	}
}

.section-features {
	padding: 20rem 0;
	background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.8), rgba(111, 144, 104, 0.9)), url(../img/nat-4-small.jpg);
	background-size: cover;
	margin-top: -10rem;
	transform: skewY(-7deg);
}

@media (min-resolution: 192dpi) and (min-width: 37.5em),
(min-width: 125em) {
	.section-features {
		background-image: linear-gradient(to right bottom, rgba(184, 216, 172, 0.8), rgba(111, 144, 104, 0.9)), url(../img/nat-4.jpg);
	}
}

.section-features>* {
	transform: skewY(7deg);
}

@media (max-width: 56.25em) {
	.section-features {
		padding: 10rem 0;
	}
}

.section-tours {
	background-color: #f7f7f7;
	padding: 25rem 0 15rem 0;
	margin-top: -10rem;
}

@media (max-width: 56.25em) {
	.section-tours {
		padding: 20rem 0 10rem 0;
	}
}

.section-stories {
	position: relative;
	padding: 15rem 0;
}

@media (max-width: 56.25em) {
	.section-stories {
		padding: 15rem 0;
	}
}

.section-book {
	padding: 15rem;
	background-image: linear-gradient(to right bottom, #b8d8ac, #6f9068);
}

@media (max-width: 56.25em) {
	.section-book {
		padding: 10rem 0;
	}
}

@media (max-width: 37.5em) {
	.section-book {
		padding: 5rem 0;
	}
}

.book {
	background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.85) 55%, transparent 45%), url(/img/nat-10.jpg);
	background-size: cover;
	box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
	border-radius: 3px;
}

@media (max-width: 75em) {
	.book {
		background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.85) 70%, transparent 30%), url(/img/nat-10.jpg);
	}
}

@media (max-width: 56.25em) {
	.book {
		background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(/img/nat-10.jpg), url(/img/nat-10.jpg);
	}
}

.book__form {
	width: 55%;
	padding: 6rem;
	padding-top: 4rem;
}

@media (max-width: 75em) {
	.book__form {
		width: 70%;
	}
}

@media (max-width: 56.25em) {
	.book__form {
		width: 100%;
	}
}